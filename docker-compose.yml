version: '3.8'
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: qikiworld
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d qikiworld"]
      interval: 5s
      timeout: 3s
      retries: 30

  api:
    build:
      context: ./server
    environment:
      PORT: "4000"
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/qikiworld?schema=public"
      NODE_ENV: "production"
      FREE_MODE: "true"
      DISABLE_REDIS: "true"
      DISABLE_OPENSEARCH: "true"
      LOCAL_STORAGE_DIR: "/app/var/uploads"
      SMTP_HOST: "mailhog"
      SMTP_PORT: "1025"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads:/app/var/uploads
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4000/health | grep 'ok' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  ui:
    build:
      context: ./ui
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:8080/api"
      NEXT_PUBLIC_SITE_URL: "http://localhost:8080"
    depends_on:
      api:
        condition: service_started
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080 | grep 'QW_UI_OK' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  caddy:
    image: caddy:2-alpine
    ports:
      - "8080:8080"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      ui:
        condition: service_started
      api:
        condition: service_started

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"

volumes:
  pgdata: {}
  uploads: {}
